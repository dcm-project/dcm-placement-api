name: Integration Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  integration-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Podman and Podman Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y podman
        pip3 install podman-compose

    - name: Setup KinD
      uses: helm/kind-action@v1.10.0
      with:
        version: v0.24.0
        cluster_name: kind

    - name: Install KubeVirt
      run: |
        chmod 644 ~/.kube/config
        export KUBEVIRT_VERSION=$(curl https://storage.googleapis.com/kubevirt-prow/release/kubevirt/kubevirt/stable.txt)
        kubectl apply -f https://github.com/kubevirt/kubevirt/releases/download/${KUBEVIRT_VERSION}/kubevirt-operator.yaml
        kubectl apply -f https://github.com/kubevirt/kubevirt/releases/download/${KUBEVIRT_VERSION}/kubevirt-cr.yaml
        kubectl wait -n kubevirt kv kubevirt --for condition=Available --timeout=5m
        kubectl get pods -n kubevirt

    - name: Start services with Podman Compose
      run: |
        cat > deploy/podman/.env << 'EOF'
        # Database Configuration
        DATABASE_NAME=placement
        DATABASE_USER=admin
        DATABASE_PASSWORD=adminpass
        DATABASE_PORT=5432
        DATABASE_HOST=placement-db
        DATABASE_MASTER_USER=admin
        DATABASE_MASTER_PASSWORD=adminpass
        EOF
        timeout 5m make compose-up
        podman ps -a

    - name: Test API endpoints
      run: |
        SWAGGER_RESPONSE=$(curl -s http://localhost:8080/swagger.json)
        echo "Swagger response: $SWAGGER_RESPONSE"

    - name: Show service logs on failure
      if: failure()
      run: |
        podman logs placement-db || true
        podman logs placement-policy-engine || true
        podman logs placement-api || true
        podman ps -a
