// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xWb1MbtxP+Kpr9/V7e2WfjkMbvHJu2pmBoA80kDJMRd2uf4E4Skg5zZfzdO5Js7PtD",
	"aDsJbad5ZZ+02tU++zy7eoBY5FJw5EbD8AF0nGJO3d+RlBmLqWGC20+phERlGLpNTnO0vwnqWDHpjWBG",
	"cyRiTkyKhO4cDwDvaS4zhCFQKUON6g5VGPUgAFNKu6yNYnwBqwDsJotbvL/zG08E4EUOwwtY4pX3DgHE",
	"ghvKOCq4bIljGCofZE6LzMCwH9QCnoqMxSU5Y6jag659Mm5wgco6/U1wD1DV00e7/AwyF1DocInahBaW",
	"zf++vTszmDuvzST8AlWKlrBaBaDwtmAKE+vPFWkL6BYEcXWNsYEA7kOKMlSoRaEs5EYVuAp2S3/EtGmW",
	"fycF9/14wf8rnMMQ/tfd0qq75lR3x+svqKXgGpspBMDx3nySdIGfjLhB3gTzzC6TuVBEoVEM7xhfOGDt",
	"SWJPWqQV6iIzusI9LA/lx/F0f3p9UB73z6PZ2Ye9o/fng5P3U3N8dnhzXPbS2eS8f3T2czm7/nA/mxzs",
	"zSaj5fH48E2TqjW0K5g0sK6i+ph/A1mWNBOeTp4TVa+/h4NX+69D/O7NVdjrJ3shHbzaDwf9/f3eoPd6",
	"EEURBDAXKqcGhlAULGnT3j9O1p9R7b9dqX9QiwdKCdXkSSySFiydMXF7O/cdRFEbArjx3OYjR63pouIG",
	"pvyOZiwhlvWordQUzdGg0iQkv9otBxX5nrIMk2cF4+M3lWLtGJ8LnyY3NLYdaFXvzpPxMTnNaIw5ckNG",
	"p1MIIGMxrmXlqQwjSeMUSb9j+V+oDIaQGiP1sNtdLpcd6rY7Qi2667O6ezQdH8zeHYT9TtRJTZ552hkH",
	"QT3gHSrtr3PXo5lMac9aC4mcSgZD2OtELrKkJnV169Zb5wJNswa26xKaZcQmOdo94Zwr9zFN1pY1A7Vu",
	"Ls59P4o2OCI3td7dvdZ+uPsW/ScauBsLrlLVi5/8ZPMffMGgnv8tod7SRybamK9eIuaUG1ScZsS3OoJr",
	"wwB0kedUlTCEH9CXrlLoVQBS6JZKjxVSg4S6Slf7TbXQ3nBUsdgKEIYXdc8n7g/NyHTihuUXmB/M+r0t",
	"UJWwmRXgBskW1rrkL73mUZu3Iim/BhV9nbaNZd03ayrofY3Q22fMNyW0KGHDbV7hnbWpdMHuA0tWXhkZ",
	"mpapNnHrTY2QK6oxIYKTgrPbAsl00pCNP/tZ2ThW2wZdI3WVUrskf+Yd5Ulfod/gpek3E2S8Dvdfp+GG",
	"PjUaBiCLloZ8LhP6V8lma1P+7VyLXpprHrLkG+HWhNtQqKXvpUgzkz757vvRbZM4xfjGDe22R27zAeiP",
	"PfH0a46lymV3Q/qEfWaer/7F3IXV5er3AAAA//9uIjN0KxIAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
