// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/8xXUW/bNhf9KwS/72EDJEt24631W5pkmbE6DZLML0UfGOlaYkuR3CXlzAj83weSsmNZ",
	"TNMB7TYEASxf8fDy3HPPpR9poRqtJEhr6OyRmqKGhvmP51AIhlAuG/fEhHi/orMPj/T/CCs6o//LnlZm",
	"3bJsuaDb5JFqVBrQcvBABQKzUJ5a91CCKZBry5WkM3q2DyUU/mSNFkBndJJPpmn+Jh2/vhtPZycnszyn",
	"CbUb7YLGIpcV3Sa0lOaKNTBEPb+6JT5yCKqxwBHTeqRRlaNCNTHIill4YJsh5GUXOEQc5yP3N44B8TKS",
	"VkcoWS7I/LwHVXah9GT6UxROn5YlgjFD1Pk12cViyU1icBJsw8znIdhVF+hVYzod7f4jddjuv1H3n6Cw",
	"dPtxmxyI5x03vvDcQuPT/5J+DjT3hMsQ2cY9XyAqdBBH+lJlRAT+ZeJjB6c5yfM9LpcWKkCHDDvkGEYD",
	"xrCqr6a5XDPBS4LwRwvGEs2QNWABDUnJ0oWYwyC/MC6gjLLmlnKEks4+dPt/HFCZ0GvBCmhA2hswWkkD",
	"w/PXykRa645hBZb44GHm7ov059dvvla1+wSONat3gedEu+NtAHlrmW1NlNflgpi2KMCYVSvEhvhNyhi6",
	"8SBfyrd7Y5Dzy+XYZRYryE2o+N+WtrfGgaSXi4iedRvpzLa5ByRqRc6ufyeFQuid7HVU1XId0bRcc1TS",
	"M/RDCevE8VRxWSXEOeOPR6apouTLqO86z3UZ2hrImqNtmSANK2ou+0VmWqcGcA2Y5lH3VJG6vteAzHJZ",
	"EbMxFpoeItYgYkDImiHSzemCcEku3x5CjCdRChEqv+iZ7gphslJI9u3QS6w1KTBj0+gxUYkIizdK7Flc",
	"LvrlaO8FL9IVKxxCBNGCZNLOI2185yPHPRzeT8eTVy/2hAwD1THqC5R4nQaR7XnqzrRLhJeRFnLAXK6U",
	"y1HwAjpPC5Kip5oVNZCJHzUtCudY1mozy7KHh4cR8+GRwirr1prs3fzs4ur2Ip2M8lFtG+GJ4Db4SSfD",
	"RZAheXKH0+s5Tega0ASC1mMmdM3GXn8aJNOczugrN0VpQjWztRdlthvV69DyFXgLUEGdSjru6SXYp0lm",
	"PD3BvP2SSZ6HsSWtk4u7XGkteOHXZ59M0Fvwja8fmN6MPLlHffObO9HJN9wzjOHIVm/ZfiB6+Zi2aRhu",
	"AiGECUF25B3bg/HvZzUwYetnaf01hON0Dk/dyyCsJUUNxeewmW/YbO0NQncjtL+fF4tvwe5Ub1W5+WY0",
	"uoHQbzKLLWy/o1iGd4lIEZeLJys7mMX/jogSOv0n9pxLCyiZIGEqEehePBSQJ4+wwWDzWsLdpeAFVzi4",
	"PHxXWzi+pPzXfWHPX8wY3ApfF+N/f4ahkLnfGX8FAAD//0uAijS+DgAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
